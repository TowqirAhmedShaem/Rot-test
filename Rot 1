/* 
Demonstrates use of rotary encoder for motor
direction and distance.
*/

const int CHA = D1;
const int CHB = D2;
int LED = D3;

volatile int master_count = 0; // universal count
volatile byte INTFLAG1 = 0; // interrupt status flag

void setup() { 
  pinMode(CHA, INPUT);
  pinMode(CHB, INPUT);
  pinMode(LED, OUTPUT); // LED connected to pin to ground
  
  Serial.begin(9600); 
  Serial.println(master_count);
  
  attachInterrupt(digitalPinToInterrupt(CHA), flag, FALLING);  
  // interrupt digital pin
}

void loop() {

  if (INTFLAG1)   {
       Serial.println(master_count);
       delay(100);
     INTFLAG1 = 0; // clear flag
} // end if

analogWrite(LED, master_count);


} // end loop


void flag() {
  INTFLAG1 = 1;
  
  static unsigned long lastInterruptTime = 0;
  unsigned long interruptTime = millis();

  // If interrupts come faster than 5ms, assume it's a bounce and ignore
  if (interruptTime - lastInterruptTime > 3) {
if (digitalRead(CHB) == LOW)
    {
      master_count = master_count-5 ; // Could be -5 or -10
    }
    else {
      master_count = master_count+5 ; // Could be +5 or +10
    }
  }
  lastInterruptTime = interruptTime;
  // Keep track of when we were here last (no more than every 5ms)
}
